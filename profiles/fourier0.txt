Timer unit: 1e-07 s

Total time: 0.0001269 s
File: C:\Users\d2dud\Documents\GitHub\DESC_APC524\desc\basis.py
Function: fourier at line 696

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   696                                           @functools.partial(jit, static_argnums=(1))
   697                                           def fourier(theta, m, NFP=1, dt=0):
   698                                               """Fourier series
   699                                           
   700                                               Parameters
   701                                               ----------
   702                                               theta : ndarray, shape(N,)
   703                                                   poloidal/toroidal coordinates to evaluate basis
   704                                               m : ndarray of int, shape(K,)
   705                                                   poloidal/toroidal mode number(s)
   706                                               NFP : int
   707                                                   number of field periods (Default = 1)
   708                                               dt : int
   709                                                   order of derivative (Default = 0)
   710                                           
   711                                               Returns
   712                                               -------
   713                                               y : ndarray, shape(N,K)
   714                                                   basis function(s) evaluated at specified points
   715                                           
   716                                               """
   717         1        239.0    239.0     18.8      theta = jnp.atleast_1d(theta)[:, jnp.newaxis]
   718         1         52.0     52.0      4.1      m = jnp.atleast_1d(m)[jnp.newaxis]
   719         1        170.0    170.0     13.4      m_pos = (m >= 0)
   720         1         46.0     46.0      3.6      m_neg = (m < 0)
   721         1         31.0     31.0      2.4      m_abs = jnp.abs(m)
   722         1        223.0    223.0     17.6      der = (1j*m_abs*NFP)**dt
   723         1        238.0    238.0     18.8      exp = der*jnp.exp(1j*m_abs*NFP*theta)
   724         1        270.0    270.0     21.3      return m_pos*jnp.real(exp) + m_neg*jnp.imag(exp)